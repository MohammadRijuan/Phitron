int pop() 
{
    queue<int> newq;  // একটি নতুন কিউ তৈরি করা হয়েছে
    int last;         // শেষ উপাদান সংরক্ষণের জন্য একটি ভেরিয়েবল ডিক্লেয়ার করা হয়েছে

    while (!q.empty()) 
    {
        int k = q.front();  // প্রথম উপাদান নেওয়া হয়
        q.pop();            // প্রথম উপাদান বাদ দেওয়া হয়

        if (q.empty()) 
        {
            //last element e
            last = k;
            break;       // যদি কিউ খালি হয়, তাদের অংশ হিসেবে শেষ উপাদান সংরক্ষণ করা হয়
        }

        newq.push(k);       // নতুন কিউতে প্রথম উপাদান যোগ করা হয়
    }

    q = newq;  // নতুন কিউকে আসল কিউতে কপি করা হয়
    return last;
}

int top()
{
    queue<int> newq;  // একটি নতুন কিউ তৈরি করা হয়েছে
    int last;         // শেষ উপাদান সংরক্ষণের জন্য একটি ভেরিয়েবল ডিক্লেয়ার করা হয়েছে

    while (!q.empty()) 
    {
        int k = q.front();  // প্রথম উপাদান নেওয়া হয়
        q.pop();            // প্রথম উপাদান বাদ দেওয়া হয়

        if (q.empty()) 
        {
            //last element e
            last = k;
            //break hobena eikane       // যদি কিউ খালি হয়, তাদের অংশ হিসেবে শেষ উপাদান সংরক্ষণ করা হয়
        }

        newq.push(k);       // নতুন কিউতে প্রথম উপাদান যোগ করা হয়
    }

    q = newq;  // নতুন কিউকে আসল কিউতে কপি করা হয়
    return last;

}
